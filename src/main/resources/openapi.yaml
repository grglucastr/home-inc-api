openapi: 3.0.3
info:
  title: Home Inc API
  version: '1.0'
paths:
  /v2/expenses:
    get:
      summary: List all expenses
      operationId: getExpenses
      parameters:
        - $ref: "#/components/parameters/expenseFilter"
      tags:
        - Expenses
      responses:
        '200':
          description: Lists all expenses found according to query filter criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExpenseResponse"

    post:
      summary: Add new expense registry
      operationId: postExpenses
      tags:
        - Expenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpenseRequest"
      responses:
        '201':
          description: Lists all expenses found according to query filter criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"

  /v2/expenses/{expenseId}:
    get:
      summary: Query a single expense by its id.
      operationId: getExpenseById
      parameters:
        - $ref: "#/components/parameters/expenseId"
      tags:
        - Expenses
      responses:
        '200':
          description: Retuns a JSON object of a single expense.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"
        '404':
          description: Expense not found

  /v2/expenses/{monthNo}/summary:
    get:
      summary: Get a monthly summary of the min, max and sum of all expenses of a given month.
      operationId: Monthly summary
      parameters:
        - $ref: "#/components/parameters/monthNo"
        - $ref: "#/components/parameters/paid"
      tags:
        - Expenses
      responses:
        '200':
          description: Shows the summary according filter criteria or an empty object if does not find anything.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseMonthlySummaryResponse"

  /v2/expenses/{expenseId}/pay:
    post:
      summary: Mark expense as paid.
      operationId: payExpense
      parameters:
        - $ref: "#/components/parameters/expenseId"
      tags:
        - Expenses
      responses:
        '200':
          description: Response of a paid expense.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseResponse"

  /v2/expenses/{expenseId}/invalidate:
    delete:
      summary: Logical delete of an expense.
      operationId: invalidateExpense
      parameters:
        - $ref: "#/components/parameters/expenseId"
      tags:
        - Expenses
      responses:
        '204':
          description: No content.
        '404':
          description: Expense not found.

  /v2/incomes:
    get:
      summary: List all incomes registered.
      operationId: getNewIncome
      tags:
        - Incomes
      responses:
        '200':
          description: List all incomes found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IncomeResponse"
    post:
      summary: Register new income.
      operationId: postNewIncome
      tags:
        - Incomes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IncomeRequest"
      responses:
        '201':
          description: Income sucessfully registered.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeResponse"

  /v2/incomes/sum:
    get:
      summary: Retrieves the sum of all incomes
      operationId: getSumOfIncomes
      tags:
        - Incomes
      responses:
        '200':
          description: Sum of all incomes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncomeSumResponse"

components:
  parameters:
    expenseId:
      in: path
      name: expenseId
      required: true
      description: The id number of the expense.
      schema:
        type: integer
        minimum: 1
        format: int64
    monthNo:
      in: path
      name: monthNo
      required: true
      description: The number of the month (1=jan, 2=feb).
      schema:
        type: integer
        minimum: 1
        format: int32
    paid:
      in: query
      description: When true, filter only the paid ones. When false, filter those expenses not paid. On its absence, brings paid and unpaid ones.
      required: false
      name: paid
      schema:
        type: boolean
    expenseFilter:
      in: query
      name: expenseFilter
      description: Filter of expenses
      schema:
        $ref: "#/components/schemas/ExpenseFilter"

  schemas:
    ExpenseFilter:
      description: Filter object for expenses
      type: object
      properties:
        paid:
          type: boolean
        active:
          type: boolean
          default: true
        dueDateStart:
          type: string
          format: date
        dueDateEnd:
          type: string
          format: date
        periodicty:
          type: string
          example: monthly
        paymentMethod:
          type: string
          example: bank transfer
    ExpenseRequest:
      description: Request object to add a new expense registry
      type: object
      properties:
        title:
          type: string
          example: COPEL - April 2020
        description:
          type: string
          example: Electricity billl reference to the month of April
        cost:
          type: number
          minimum: 0.0
          maximum: 67.99
        dueDate:
          type: string
          format: "date"
          example: "2020-04-30"
        paid:
          type: boolean
          default: false
        invoiceDate:
          type: string
          format: "date"
          example: "2020-04-25"
        servicePeriodStart:
          type: string
          format: "date"
          example: "2020-03-25"
        servicePeriodEnd:
          type: string
          format: "date"
          example: "2020-04-25"
        periodicity:
          type: string
          enum: ["daily", "weekly", "monthly", "yearly"]
          example: "monthly"
        paymentMethod:
          type: string
          enum: ["cash", "debit card", "credit card", "ticket", "bank transfer"]
          example: "bank transfer"
    ExpenseResponse:
      description: Response object on listing all expenses
      type: object
      allOf:
        - $ref: "#/components/schemas/ExpenseRequest"
      properties:
        id:
          type: integer
        isActive:
          type: boolean
          description: True if the expense is deleted
        paidDate:
          type: string
          format: "date"
          example: "2020-04-30"
        insertDateTime:
          type: string
          format: "date-time"
          example: "2020-04-26 08:20:15"
        updateDateTime:
          type: string
          format: "date-time"
          example: "2020-04-30 12:33:29"
    ExpenseMonthlySummaryResponse:
      description: Response summary containing the max, min and sum of values of all expenses according to criteria.
      type: object
      properties:
        monthlyProgress:
          type: string
          description: Shows monthly progress percentage.
        min:
          type: object
          description: Holds the cheapest bill according to the filter criteria
          properties:
            value:
              type: number
              example: 100.00
            expense:
              $ref: "#/components/schemas/ExpenseResponse"
        max:
          type: object
          description: Holds the most exepensive bill according to the filter criteria
          properties:
            value:
              type: number
              example: 100.00
            expense:
              $ref: "#/components/schemas/ExpenseResponse"
        count:
          type: integer
          format: int32
          description: Holds the quantity of exepenses found according to the filter criteria.
        average:
          type: number
          description: Holds the average spended in the month.
        total:
          type: number
          description: Hold the sum of all bills of the month.
        totalPaid:
          type: number
          description: Hold the sum of all paid bills of the month.
        totalToPay:
          type: number
          description: Hold the sum of all bills pending to pay of the month.
    IncomeRequest:
      description: Request object to handle income
      type: object
      properties:
        amount:
          description: Field to hold the amount of the income
          type: number
        description:
          type: string
          description: Add a description to specify the origin of this income amount
      required: [
          'amount',
          'description'
      ]
    IncomeResponse:
      description: Response object to amount
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Holds the id number of the income
        amount:
          description: Field to hold the amount of the income
          type: number
        description:
          type: string
          description: Add a description to specify the origin of this income amount
    IncomeSumResponse:
      type: number
      description: Contains the sum of all incomes.